#!/bin/sh

# get base directory
if test -h "$0"; then
  BASE_DIRECTORY=`dirname \`readlink $0\``
else
  BASE_DIRECTORY=`dirname $0`
fi
if test "$BASE_DIRECTORY" = ""; then
  BASE_DIRECTORY="."
fi

# detect host, host-platform (get first part in full-name if given)
HOST_NAME=`hostname|sed 's/^\([^\.]*\)\..*/\1/g'`
case `uname` in
  Linux*)
    HOST_PLATFORM="linux"
    ;;
  SunOS* | Solaris*)
    HOST_PLATFORM="solaris"
    ;;
  Darwin)
    HOST_PLATFORM="macos"
    ;;
  *)
    echo >&2 "ERROR: Cannot detect host system: '`uname`'!"
    exit 1
    ;;
esac

# java, java flags, JAR
JAVA="java"
case $HOST_PLATFORM in
  linux)
    JAVA_FLAGS="@JAVA_FLAGS@"

    $JAVA $JAVA_FLAGS -cp $BASE_DIRECTORY/onzen-linux.jar DataModel > /dev/null
    rc=$?
    if   test $rc -eq 32; then
      ONZEN_JAR="$BASE_DIRECTORY/onzen-linux.jar"
    elif test $rc -eq 64; then
      ONZEN_JAR="$BASE_DIRECTORY/onzen-linux_64.jar"
    else
      echo >&2 "ERROR: cannot detect data model (32/64 bit) - VM failure?"
      exit 1
    fi
    ;;
  solaris)
    JAVA_FLAGS="@JAVA_FLAGS@"

    ONZEN_JAR="$BASE_DIRECTORY/onzen-solaris.jar"
    ;;
  macos)
    JAVA_FLAGS="@JAVA_FLAGS@ -XstartOnFirstThread"

    $JAVA $JAVA_FLAGS -cp $BASE_DIRECTORY/onzen-macosx.jar DataModel > /dev/null
    rc=$?
    if   test $rc -eq 32; then
      ONZEN_JAR="$BASE_DIRECTORY/onzen-macosx.jar"
    elif test $rc -eq 64; then
      ONZEN_JAR="$BASE_DIRECTORY/onzen-macosx_64.jar"
    else
      echo >&2 "ERROR: cannot detect data model (32/64 bit) - VM failure?"
      exit 1
    fi
    ;;
esac

# check X11 server connection if possible
if test -n "`sh xset 2>/dev/null`"; then
  xset -q > /dev/null
  rc=$?
  if test $rc -ne 0; then
    echo >&2 "ERROR: cannot connect to X11 server. Please check DISPLAY variable and rights to connect to X11 server."
    exit 1
  fi
fi

# run main
while true; do
  $JAVA $JAVA_FLAGS -jar $ONZEN_JAR --debug "$@"
  rc=$?
  if test $rc -eq 64; then
    continue
  fi
  break
done

exit $rc
